import { extractUniqueElements } from 'utils/array';
import { extractDependencies, refineSkills } from 'utils/extractStacks';

describe('extract skill names from package json', () => {
  it('when dependency and dev-dependency are both exists', () => {
    const samplePackage = {
      name: 'skill-set-generator',
      version: '0.1.0',
      private: true,
      description: 'make skill sets image for readme',
      main: 'index.js',
      repository: 'https://github.com/msdio/skill-set-generator.git',
      author: 'msdio <rlagofka1@gmail.com>, userJu <boochickenood@gmail.com>',
      license: 'MIT',
      homepage: '.',
      scripts: {
        start: 'vite',
        build: 'tsc && vite build',
        preview: 'vite preview',
        test: 'jest --watchAll',
        predeploy: 'yarn build',
        deploy: 'gh-pages -d build',
      },
      eslintConfig: {
        extends: ['react-app', 'react-app/jest'],
      },
      browserslist: {
        production: ['>0.2%', 'not dead', 'not op_mini all'],
        development: ['last 1 chrome version', 'last 1 firefox version', 'last 1 safari version'],
      },
      dependencies: {
        '@emotion/react': '^11.10.5',
        '@emotion/styled': '^11.10.5',
        '@mui/icons-material': '^5.11.9',
        '@mui/material': '^5.11.8',
        '@mui/system': '^5.11.8',
        firebase: '^9.17.1',
        'framer-motion': '^9.0.3',
        'gh-pages': '^5.0.0',
        'html-to-image': '^1.11.11',
        pretendard: '^1.3.6',
        react: '^18.2.0',
        'react-dom': '^18.2.0',
        'react-ga4': '^2.0.0',
        'react-router-dom': '^6.8.1',
        'simple-icons': '^8.5.0',
      },
      devDependencies: {
        '@babel/core': '^7.21.3',
        '@testing-library/jest-dom': '^5.14.1',
        '@testing-library/react': '^13.0.0',
        '@testing-library/user-event': '^13.2.1',
        '@types/jest': '^29.4.0',
        '@types/node': '^18.13.0',
        '@types/react': '^18.0.28',
        '@types/react-dom': '^18.0.10',
        '@typescript-eslint/eslint-plugin': '^5.51.0',
        '@typescript-eslint/parser': '^5.51.0',
        '@vitejs/plugin-react': '^3.1.0',
        eslint: '^8.34.0',
        'eslint-config-prettier': '^8.6.0',
        'eslint-config-react': '^1.1.7',
        'eslint-config-react-app': '^7.0.1',
        'eslint-plugin-prettier': '^4.2.1',
        'eslint-plugin-react': '^7.32.2',
        'eslint-plugin-simple-import-sort': '^10.0.0',
        'eslint-plugin-unused-imports': '^2.0.0',
        jest: '^29.5.0',
        prettier: '2.8.4',
        'ts-jest': '^29.0.5',
        typescript: '^4.9.5',
        vite: '^4.2.1',
        'vite-tsconfig-paths': '^4.2.0',
      },
    };

    const resultDep = [
      '@emotion/react',
      '@emotion/styled',
      '@mui/icons-material',
      '@mui/material',
      '@mui/system',
      'firebase',
      'framer-motion',
      'gh-pages',
      'html-to-image',
      'pretendard',
      'react',
      'react-dom',
      'react-ga4',
      'react-router-dom',
      'simple-icons',
      '@babel/core',
      '@testing-library/jest-dom',
      '@testing-library/react',
      '@testing-library/user-event',
      '@types/jest',
      '@types/node',
      '@types/react',
      '@types/react-dom',
      '@typescript-eslint/eslint-plugin',
      '@typescript-eslint/parser',
      '@vitejs/plugin-react',
      'eslint',
      'eslint-config-prettier',
      'eslint-config-react',
      'eslint-config-react-app',
      'eslint-plugin-prettier',
      'eslint-plugin-react',
      'eslint-plugin-simple-import-sort',
      'eslint-plugin-unused-imports',
      'jest',
      'prettier',
      'ts-jest',
      'typescript',
      'vite',
      'vite-tsconfig-paths',
    ];

    expect(extractDependencies(samplePackage)).toEqual(resultDep);
  });

  it('when there is no dev-dependency', () => {
    const samplePackage = {
      name: 'react-app',
      version: '0.1.0',
      private: true,
      dependencies: {
        '@testing-library/jest-dom': '^5.16.5',
        '@testing-library/react': '^13.4.0',
        '@testing-library/user-event': '^13.5.0',
        '@types/jest': '^27.5.2',
        '@types/node': '^16.18.32',
        '@types/react': '^18.2.7',
        '@types/react-dom': '^18.2.4',
        react: '^18.2.0',
        'react-dom': '^18.2.0',
        'react-scripts': '5.0.1',
        sass: '^1.62.1',
        typescript: '^4.9.5',
        'web-vitals': '^2.1.4',
      },
      scripts: {
        start: 'react-scripts start',
        build: 'react-scripts build',
        test: 'react-scripts test',
        eject: 'react-scripts eject',
      },
      eslintConfig: {
        extends: ['react-app', 'react-app/jest'],
      },
      browserslist: {
        production: ['>0.2%', 'not dead', 'not op_mini all'],
        development: ['last 1 chrome version', 'last 1 firefox version', 'last 1 safari version'],
      },
    };

    const resultDep = [
      '@testing-library/jest-dom',
      '@testing-library/react',
      '@testing-library/user-event',
      '@types/jest',
      '@types/node',
      '@types/react',
      '@types/react-dom',
      'react',
      'react-dom',
      'react-scripts',
      'sass',
      'typescript',
      'web-vitals',
    ];

    expect(extractDependencies(samplePackage)).toEqual(resultDep);
  });
});

test('make every element in array unique using set', () => {
  const original = [
    'emotion',
    'emotion',
    'emotion',
    'mui',
    'firebase',
    'firebase',
    'framer-motion',
    'framer-motion',
    'framer-motion',
    'gh-pages',
    'gh-pages',
  ];

  const generatedSet = new Set(['emotion', 'mui', 'firebase', 'framer-motion', 'gh-pages']);

  expect(extractUniqueElements(original)).toEqual(generatedSet);
});

test('remove submodules and get stack names from array', () => {
  const original = [
    '@emotion/react',
    '@emotion/styled',
    '@mui/icons-material',
    '@mui/material',
    '@mui/system',
    'firebase',
    'framer-motion',
    'gh-pages',
    'html-to-image',
    'pretendard',
    'react',
    'react-dom',
    'react-ga4',
    'react-router-dom',
    'simple-icons',
    '@babel/core',
    '@testing-library/jest-dom',
    '@testing-library/react',
    '@testing-library/user-event',
    '@types/jest',
    '@types/node',
    '@types/react',
    '@types/react-dom',
    '@typescript-eslint/eslint-plugin',
    '@typescript-eslint/parser',
    '@vitejs/plugin-react',
    'eslint',
    'eslint-config-prettier',
    'eslint-config-react',
    'eslint-config-react-app',
    'eslint-plugin-prettier',
    'eslint-plugin-react',
    'eslint-plugin-simple-import-sort',
    'eslint-plugin-unused-imports',
    'jest',
    'prettier',
    'ts-jest',
    'typescript',
    'vite',
    'vite-tsconfig-paths',
  ];

  const refinedSkills = new Set([
    'emotion',
    'mui',
    'firebase',
    'framer-motion',
    'gh-pages',
    'html-to-image',
    'pretendard',
    'react',
    'react-dom',
    'react-ga4',
    'react-router-dom',
    'simple-icons',
    'babel',
    'testing-library',
    'types',
    'typescript-eslint',
    'vitejs',
    'eslint',
    'eslint-config-prettier',
    'eslint-config-react',
    'eslint-config-react-app',
    'eslint-plugin-prettier',
    'eslint-plugin-react',
    'eslint-plugin-simple-import-sort',
    'eslint-plugin-unused-imports',
    'jest',
    'prettier',
    'ts-jest',
    'typescript',
    'vite',
    'vite-tsconfig-paths',
  ]);

  expect(refineSkills(original)).toEqual(refinedSkills);
});
